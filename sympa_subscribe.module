<?php

/**
 * @file    
 * Drupal 7.x example module.
 */


/*********
 * HOOKS *
 *********/


/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help.
 * @param arg
 *   Array that holds the current path as returned from arg() function.
 */
function sympa_subscribe_help($path, $arg) {
  switch ($path) {
    case 'admin/help#sympa_subscribe':
      return '<p>' . t('Display Sympa subscribe/unsubscribe block') . '</p>';
      break;
  }
}

/**
 * Implements hook_block_info().
 */
function sympa_subscribe_block_info() {
  $blocks['sympa_subscribe'] = array(
    'info'  => t('Sympa Subscribe'),  // the name that will appear in the block list
    'cache' => DRUPAL_CACHE_PER_ROLE  // default
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function sympa_subscribe_block_view($delta = '') {
  drupal_add_js( drupal_get_path('module', 'sympa_subscribe') .'/sympa_subscribe.js', 'file');

  $block = array();

  switch ($delta) {
    case 'sympa_subscribe':
      $block['subject'] = t('Mailing List');

      // TODO This could/should be so much better.
      $url  = variable_get('sympa_subscribe_url');
      $list = variable_get('sympa_subscribe_list');
      $block['content'] = <<<EOCONTENT
<div id="sympa_subscribe_subscribe_form">
  <form target="hiddensubmit"
        method="post"
        action="$url"
        class="bold_label"
  >
    Sign up to receive our newsletter by entering your email address here:
    <input type="text"    name="email"    style="width: 100%;" id="emailfield1" />
    <input type="hidden"  name="list"     value="$list"                         />
    <input type="hidden"  name="action"   value="subrequest"                    />
    <input type="submit"  
           value="submit"  
           name="action_subrequest"
           onclick="sympa_subscribe_finish_subscribe_form()"
           style="margin-top: 10px;"
           class="MainMenuLinks"
    />
  </form>
</div>

<div id="sympa_subscribe_confirm_form" style="display: none">
  Please check your email.  You will receive an email containing a password from the listhost, enter it here.

  <form target="hiddensubmit"
        method="post"
        action="$url"
        class="bold_label"
  >
    <label for="passwd">Password</label>
    <input type="password"  name="passwd"           style="width: 100%;" id="passwd"  />
    <input type="hidden"    name="email"            id="emailfield2"                  />
    <input type="hidden"    name="list"             value="$list"                     />
    <input type="hidden"    name="previous_action"  value="subrequest"                />
    <input type="submit"
           name="action_subscribe"
           value="Subscribe"
           style="margin-top: 10px;"
           onclick="sympa_subscribe_finish_confirm_form()"
           class="MainMenuLinks"
    />
  </form>

  <form id="sympa_subscribe_resend_password"
        target="hiddensubmit"
        method="post"
        action="$url"
        class="bold_label"
  >
    <input type="hidden"  name="email"  id="emailfield3"    />
    <input type="hidden"  name="list"   value="$list"       />
    <input type="hidden"  name="action" value="send_passwd" />
    <input type="submit"
           name="action_sendpasswd"
           value="Resend password"
           onclick="javascript: alert('Password sent to ' + document.getElementById('emailfield3').value )"
           style="margin-top: 10px;" class="MainMenuLinks"
    />
  </form>
</div>

<div id="sympa_subscribe_done" style="display: none">Thank you, you have been added to the list.</div>

<p><iframe style="display: none;" name="hiddensubmit"></iframe></p>
EOCONTENT;
  }
  return $block;
}

/**
 * Implements hook_menu().
  */
function sympa_subscribe_menu() {
  $items = array();

  $items['admin/config/content/sympa_subscribe'] = array(
    'title'             => 'Sympa Subscribe',
    'description'       => 'Configuration for Sympa Subscribe module',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('sympa_subscribe_configuration_form'),
    'access arguments'  => array('access administration pages'),
    'type'              => MENU_NORMAL_ITEM
  );

  return $items;
}


/*********
 * FORMS *
 *********/

/**
 * Form function called by drupal_get_form() in sympa_subscribe_menu().
 */
function sympa_subscribe_configuration_form() {
  $form['sympa_subscribe_url'] = array(
    '#type'           => 'textfield',
    '#title'          => t('Sympa URL (eg. https://sympa.example.org/web)'),
    '#default_value'  => variable_get('sympa_subscribe_url', ''),
    '#size'           => 32,
    '#maxlength'      => 64,
    '#description'    => t('Sympa URL'),
    '#required'       => TRUE
  );
  $form['sympa_subscribe_list'] = array(
    '#type'           => 'textfield',
    '#title'          => t('Sympa list name'),
    '#default_value'  => variable_get('sympa_subscribe_list', ''),
    '#size'           => 32,
    '#maxlength'      => 64,
    '#description'    => t('Sympa list name'),
    '#required'       => TRUE
  );

  return system_settings_form($form);
}

/**
 * Implements validation for sympa_subscribe_configuration_form().
 *
 * @param $form
 *   A structured array containing the elements and properties of the form.
 * @param $form_state
 *   An array that stores information about the form's current state
 *   during processing.
 */
function sympa_subscribe_configuration_form_validate($form, &$form_state) {
  $key  = 'sympa_subscribe_url';
  $url  = $form_state['values'][$key];
  if      (!is_string($url)) {
    form_set_error($key, t('Must be a string'));
  }
  elseif  (empty($url)) {
    form_set_error($key, t('String cannot not be empty'));
  }
  elseif  (!valid_url($url)) {
    form_set_error($key, t('Not a valid URL'));
  }

  $key  = 'sympa_subscribe_list';
  $list = $form_state['values'][$key];
  if      (!is_string($list)) {
    form_set_error($key, t('Must be a string'));
  }
  elseif  (empty($list)) {
    form_set_error($key, t('String cannot not be empty'));
  }
}


// vim: syntax=php

